{"ast":null,"code":"var _jsxFileName = \"/Users/jrcamilon/Development/Personal/XDM/src/schema.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./schema.css\";\nimport { NavLink } from \"reactstrap\";\nimport { Octokit } from \"@octokit/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Schema = () => {\n  _s();\n\n  const [schemaType, setSchemaType] = useState(\"class\");\n  const [schemaName, setSchemaName] = useState(\"\");\n  const [titlemain, setTitle] = useState(\"\");\n  const [titleXmd, setTitleXmd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [descriptionXmd, setDescriptionXmd] = useState(\"\");\n  const [behaviour, setBehaviour] = useState(\"record\");\n  const [className, setClassName] = useState(\"profile\");\n  const [typemain, setType] = useState(\"string\");\n  const [metaStatus, setmetastatus] = useState(\"experimental\");\n  const [jsonOutput, setjsonOutput] = useState(\"\");\n  const octokit = new Octokit({\n    auth: '328087a394cd90ff8fe51d17912cd136178456a8'\n  }); // owner = 'manvithchandra19',\n  // repo = 'test',\n  // title = 'My Test Pull Request',\n  // body  = 'This pull request is a test!',\n  // head  = 'xdm',\n  // base  = 'test';\n\n  const [inputList, setInputList] = useState([{\n    titleID: '',\n    titleXDM: \"\",\n    typeXDM: \"\",\n    descriptionXDM: ''\n  }]);\n  const schema_Type = [\"class\", \"mixin\", \"datatype\"];\n  const behaviours = [\"record\", \"timeseries\"];\n  const classname = [\"profile\", \"experience event\", \"product\"];\n  const types = [\"string\", \"integer\", \"data-time\", \"date\", \"array\", \"object\"];\n  const metastatus = [\"experimental\", \"stable\"];\n  const [labeloption, setlabel] = useState(\"Behaviour\");\n  const [valueoption, setvalue] = useState(behaviours);\n\n  const handleInputChange = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(e.target.name);\n    const list = [...inputList];\n    console.log(list);\n    list[index][name] = value;\n    setInputList(list);\n    console.log(inputList);\n  };\n\n  const handleAddClick = () => {\n    setInputList([...inputList, {\n      titleID: '',\n      titleXDM: \"\",\n      typeXDM: \"\",\n      descriptionXDM: ''\n    }]);\n    console.log(inputList);\n  };\n\n  const submitApi = () => {\n    var details = {\n      metaStatus: metaStatus,\n      descriptionXmd: descriptionXmd,\n      type: typemain,\n      description: description,\n      title: titlemain,\n      titleXmd: inputList.titleXDM,\n      behaviour: behaviour,\n      className: className,\n      schemaName: schemaName,\n      schemaType: schemaType\n    };\n    var formBody = [];\n\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n\n    formBody = formBody.join(\"&\");\n    const pdfData = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n      },\n      body: formBody\n    };\n    fetch(\"http://localhost:5000/getData\", pdfData).then(response => response.json()).then(response => {\n      setjsonOutput(JSON.stringify(response, undefined, 4));\n      console.log(response);\n      clearText();\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n\n  const clearText = () => {\n    setSchemaName(\"\");\n    setSchemaType(\"\");\n    setDescriptionXmd(\"\");\n    setDescription(\"\");\n    setTitleXmd(\"\");\n    setSchemaType(\"class\");\n    setmetastatus(\"\"); // setType\n\n    setTitle(\"\");\n  }; //let labeloption = 'Behaviour', valueoption = behaviours;\n\n\n  const handleOption = e => {\n    setSchemaType(e.target.value);\n\n    if (e.target.value === \"class\") {\n      setlabel(\"Behaviour\");\n      setvalue(behaviours);\n    } else if (e.target.value === \"mixin\") {\n      setlabel(\"Class Name\");\n      setvalue(classname);\n    }\n  };\n\n  const handleclass = e => {\n    if (schemaType === \"class\") {\n      setBehaviour(e.target.value);\n    } else if (schemaType === \"mixin\") {\n      setClassName(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"XDM Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"split left\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"centered \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Schema Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleOption,\n          children: schema_Type.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: labeloption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleclass,\n          children: valueoption.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Schema Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: schemaName,\n          onChange: e => setSchemaName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Schema Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: titlemain,\n          onChange: e => setTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Schema Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 18\n        }, this), inputList.map((x, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" XDM TitleID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"titleID\",\n              value: x.titleID,\n              onChange: e => handleInputChange(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), \" \", \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" XDM Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"titleXDM\",\n              value: x.titleXDM,\n              onChange: e => handleInputChange(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" XDM Type \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => handleInputChange(e, i),\n              children: types.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n                name: \"typeXDM\",\n                value: x.typeXDM,\n                children: item\n              }, item, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" XDM Description \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: x.descriptionXDM,\n              name: \"descriptionXDM\",\n              onChange: e => handleInputChange(e, i)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Meta Status \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setmetastatus(e.target.value),\n          children: metastatus.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item,\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddClick,\n          children: \"Add Properties\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), \" \", \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitApi,\n          children: \"Add Object\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitApi,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          href: \"https://github.com/manvithchandra19/test/compare\",\n          children: [\" \", \" \", \" Submit to GitHub \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"split right\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        class: \"textArea\",\n        defaultValue: jsonOutput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Schema, \"9Zsd0hlYPYqot7eZj0+rpCGzNS0=\");\n\n_c = Schema;\nexport default Schema;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schema\");","map":{"version":3,"sources":["/Users/jrcamilon/Development/Personal/XDM/src/schema.jsx"],"names":["React","useState","useEffect","NavLink","Octokit","Schema","schemaType","setSchemaType","schemaName","setSchemaName","titlemain","setTitle","titleXmd","setTitleXmd","description","setDescription","descriptionXmd","setDescriptionXmd","behaviour","setBehaviour","className","setClassName","typemain","setType","metaStatus","setmetastatus","jsonOutput","setjsonOutput","octokit","auth","inputList","setInputList","titleID","titleXDM","typeXDM","descriptionXDM","schema_Type","behaviours","classname","types","metastatus","labeloption","setlabel","valueoption","setvalue","handleInputChange","e","index","name","value","target","console","log","list","handleAddClick","submitApi","details","type","title","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","pdfData","method","headers","body","fetch","then","response","json","JSON","stringify","undefined","clearText","catch","error","handleOption","handleclass","textAlign","map","item","x","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {} from \"./schema.css\";\nimport {NavLink} from \"reactstrap\";\nimport { Octokit } from \"@octokit/core\";\n\nconst Schema = () => {\n  const [schemaType, setSchemaType] = useState(\"class\");\n  const [schemaName, setSchemaName] = useState(\"\");\n  const [titlemain, setTitle] = useState(\"\");\n  const [titleXmd, setTitleXmd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [descriptionXmd, setDescriptionXmd] = useState(\"\");\n  const [behaviour, setBehaviour] = useState(\"record\");\n  const [className, setClassName] = useState(\"profile\");\n  const [typemain, setType] = useState(\"string\");\n  const [metaStatus, setmetastatus] = useState(\"experimental\");\n  const [jsonOutput, setjsonOutput] = useState(\"\");\n  \n  \n  const octokit = new Octokit({ \n    auth: '328087a394cd90ff8fe51d17912cd136178456a8',\n  })\n      // owner = 'manvithchandra19',\n      // repo = 'test',\n      // title = 'My Test Pull Request',\n      // body  = 'This pull request is a test!',\n      // head  = 'xdm',\n      // base  = 'test';\n\n\n  const [inputList, setInputList] = useState([{ titleID: '', titleXDM: \"\", typeXDM: \"\",descriptionXDM : '' }]);\n\n  const schema_Type = [\"class\", \"mixin\", \"datatype\"];\n  const behaviours = [\"record\", \"timeseries\"];\n  const classname = [\"profile\", \"experience event\", \"product\"];\n  const types = [\"string\", \"integer\", \"data-time\", \"date\", \"array\", \"object\"];\n  const metastatus = [\"experimental\", \"stable\"];\n\n  const [labeloption, setlabel] = useState(\"Behaviour\");\n  const [valueoption, setvalue] = useState(behaviours);\n\n  const handleInputChange = (e, index) => {\n    \n    const { name, value } = e.target;\n    console.log(e.target.name);\n    \n    const list = [...inputList];\n    console.log(list);\n    list[index][name] = value;\n    setInputList(list);\n    console.log(inputList);\n  };\n\n  const handleAddClick = () => {\n    setInputList([...inputList, { titleID: '', titleXDM: \"\", typeXDM: \"\",descriptionXDM : '' }]);\n    console.log(inputList);\n  };\n\n  const submitApi = () => {\n    var details = {\n      metaStatus: metaStatus,\n      descriptionXmd: descriptionXmd,\n      type: typemain,\n      description: description,\n      title: titlemain,\n      titleXmd: inputList.titleXDM,\n      behaviour: behaviour,\n      className: className,\n      schemaName: schemaName,\n      schemaType: schemaType,\n    };\n    var formBody = [];\n    for (var property in details) {\n      var encodedKey = encodeURIComponent(property);\n      var encodedValue = encodeURIComponent(details[property]);\n      formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n    const pdfData = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n      },\n      body: formBody,\n    };\n    fetch(\"http://localhost:5000/getData\", pdfData)\n      .then((response) => response.json())\n      .then((response) => {\n        setjsonOutput(JSON.stringify(response, undefined, 4));\n        console.log(response);\n        clearText();\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n  const clearText = () => {\n    setSchemaName(\"\");\n    setSchemaType(\"\");\n    setDescriptionXmd(\"\");\n    setDescription(\"\");\n    setTitleXmd(\"\");\n    setSchemaType(\"class\");\n    setmetastatus(\"\");\n    // setType\n    setTitle(\"\");\n  };\n\n  //let labeloption = 'Behaviour', valueoption = behaviours;\n  const handleOption = (e) => {\n    setSchemaType(e.target.value);\n    if (e.target.value === \"class\") {\n      setlabel(\"Behaviour\");\n      setvalue(behaviours);\n    } else if (e.target.value === \"mixin\") {\n      setlabel(\"Class Name\");\n      setvalue(classname);\n    }\n  };\n\n  const handleclass = (e) => {\n    if (schemaType === \"class\") {\n      setBehaviour(e.target.value);\n\n    } else if (schemaType === \"mixin\") {\n      setClassName(e.target.value);\n    }\n  };\n\n  \n\n  return (\n    <div>\n        <h3 style={{ textAlign: \"center\" }}>XDM Tool</h3>\n      \n      <div class=\"split left\">\n        <div class=\"centered \">\n          <label>Schema Type </label>\n          <select onChange={handleOption}>\n            {schema_Type.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </select>{\" \"}\n          <br />\n          <br />\n          <label>{labeloption}</label>\n          <select onChange={handleclass}>\n            {valueoption.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </select>{\" \"}\n          <br />\n          <br />\n          <label>Schema Name</label>\n          <input\n            type=\"text\"\n            value={schemaName}\n            onChange={(e) => setSchemaName(e.target.value)}\n          />{\" \"}\n          <br /> <br />\n          <label>Schema Title</label>\n          <input\n            type=\"text\"\n            value={titlemain}\n            onChange={(e) => setTitle(e.target.value)}\n          />{\" \"}\n          <br /> <br />\n          <label>Schema Description</label>\n          <input\n            type=\"text\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n          />{\" \"}\n          <br /> <br />\n          {inputList.map((x, i) => {\n              return (  <div>\n                    <label> XDM TitleID</label>\n                <input\n                  type=\"text\"\n                  name = \"titleID\"\n                  value={x.titleID}\n                  onChange={e => handleInputChange(e, i)}\n                />{\" \"}  <br />\n                <br />\n              \n\n                <label> XDM Title</label>\n                <input\n                  type=\"text\"\n                  name = \"titleXDM\"\n                  value={x.titleXDM}\n                  onChange={e => handleInputChange(e, i)}\n                />{\" \"}\n                <br /> <br />\n                <label> XDM Type </label>\n                <select onChange={e => handleInputChange(e, i)}>\n                  {types.map((item) => (\n                    <option key={item} name = 'typeXDM' value={x.typeXDM}>\n                      {item}\n                    </option>\n                  ))}\n                </select>{\" \"}\n                <br />\n                <br />\n                <label> XDM Description </label>\n                <input\n                  type=\"text\"\n                  value={x.descriptionXDM}\n                  name = 'descriptionXDM'\n                  onChange={e => handleInputChange(e, i)}\n                />{\" \"}\n\n                <br /> <br />   \n              </div>)\n          \n          })}\n          <label>Meta Status </label>\n          <select onChange={(e) => setmetastatus(e.target.value)}>\n            {metastatus.map((item) => (\n              <option key={item} value={item}>\n                {item}\n              </option>\n            ))}\n          </select>{\" \"}\n          <br />\n          <br />\n          <button onClick={handleAddClick}>Add Properties</button>{\" \"}\n          &nbsp;&nbsp;&nbsp;\n          <button onClick={submitApi}>Add Object</button>\n          <br />\n          <br />\n          <button onClick={submitApi}>Submit</button>\n          <NavLink href=\"https://github.com/manvithchandra19/test/compare\"> {\" \"} Submit to GitHub </NavLink>\n          <br />\n          <br />\n        </div>\n      </div>\n      <div class=\"split right\">\n\n        <textarea class=\"textArea\" defaultValue={jsonOutput}></textarea>\n      </div>\n    </div>\n  );\n};\n\nexport default Schema;\n"]},"metadata":{},"sourceType":"module"}